#!/bin/bash

PYTHON=python3

D=`realpath $0`
cd `dirname ${D}`/..

WAIT_TO_KILL=60 # sec * 2 before kill -KILL

export ROBOGER_DIR=`pwd`

PIDFILE=${ROBOGER_DIR}/var/roboger.pid
ROBOGER=${ROBOGER_DIR}/sbin/roboger-server.py
ROBOGER_ARGS=
SAFE_RUN_PIDFILE=${ROBOGER_DIR}/var/roboger_safe.pid
SAFE_RUN=${ROBOGER_DIR}/sbin/safe-run.sh
ROBOGER_SUPERVISORD=`grep ^supervisord_program etc/roboger.ini|cut -d= -f2|cut -d '#' -f1|cut -d';' -f1|awk '{ print $1 }'`

if [ ${ROBOGER_SUPERVISORD} ]; then
    case $1 in
        start)
            supervisorctl start ${ROBOGER_SUPERVISORD}
            exit $?
        ;;
        stop)
            supervisorctl stop ${ROBOGER_SUPERVISORD}
            exit $?
        ;;
        status)
            supervisorctl status ${ROBOGER_SUPERVISORD}
            exit $?
        ;;
        restart)
            supervisorctl restart ${ROBOGER_SUPERVISORD}
            exit $?
        ;;
    esac
fi

case $1 in
start)
    echo 'Starting ROBOGER server'
    ${SAFE_RUN} ${SAFE_RUN_PIDFILE} ${PYTHON} ${ROBOGER} ${ROBOGER_ARGS} > /dev/null &
    ;;
launch)
    env ROBOGER_CORE_LOG_STDOUT=1 ${PYTHON} ${ROBOGER} ${ROBOGER_ARGS}
    ;;
stop)
    ps xa|grep -v grep|grep ${ROBOGER} > /dev/null 2>&1
    [ $? == 0 ] || exit 1
    echo -n 'Stopping ROBOGER server '
    PID_SAFE_RUN=
    PID_ROBOGER=
    [ -f ${SAFE_RUN_PIDFILE} ] && PID_SAFE_RUN=`cat ${SAFE_RUN_PIDFILE}`
    [ -f ${PIDFILE} ] && PID_ROBOGER=`cat ${PIDFILE}`
    if [ "x${PID_SAFE_RUN}" != "x" ]; then
        kill ${PID_SAFE_RUN} > /dev/null 2>&1
        rm -f ${SAFE_RUN_PIDFILE}
    fi
    if [ "x${PID_ROBOGER}" != "x" ]; then
        kill ${PID_ROBOGER} > /dev/null 2>&1
        I=0
        while kill -0 ${PID_ROBOGER} > /dev/null 2>&1; do
            echo -n '.'
            sleep 0.5
            I=`expr ${I} + 1`
            if [ ${I} -ge ${WAIT_TO_KILL} ]; then
                echo -n  'killing '
                kill -KILL ${PID_ROBOGER}
                break
            fi
        done
        rm -f ${PIDFILE}
    fi
    ps xa|grep -v grep|grep ${ROBOGER}|awk '{ print $1 }'|xargs kill > /dev/null 2>&1
    if [ $? == 0 ]; then
        sleep 10
        ps xa|grep -v grep|grep ${ROBOGER}|awk '{ print $1 }'|xargs kill -9 > /dev/null 2>&1
    fi
    echo ' stopped'
    ;;
restart)
    ./sbin/roboger-control stop $2
    ./sbin/roboger-control start $2
    ;;
logrotate)
    [ -f ${PIDFILE} ] && kill -HUP `cat ${PIDFILE}`
    ;;
version)
    ${PYTHON} ${ROBOGER} -V
    ;;
*)
    echo "Usage: roboger-control start|stop|restart|logrotate|version"
esac
