#!/usr/bin/env python3

import yaml
import os
import argparse

from pathlib import Path

dir_me = Path(__file__).absolute().parents[1]
os.chdir(dir_me)

fname = os.environ.get('ROBOGER_CONFIG')
if not fname:
    fname = f'{dir_me}/etc/roboger.yml'
if not Path(fname).exists:
    fname = '/usr/local/etc/roboger.yml'
with open(fname) as fh:
    config = yaml.load(fh.read())['roboger'].get('server', {})

ap = argparse.ArgumentParser()

ap.add_argument('-b', '--bind', metavar='ADDR[:port]', help='bind address/port')
ap.add_argument('-D', '--debug', help='force debug mode', action='store_true')
ap.add_argument('command',
                help='server command',
                choices=['start', 'stop', 'restart', 'launch'])

a = ap.parse_args()

pidfile = config.get('pid-file', '/tmp/roboger.pid')


def start_server(daemon=True):
    bind = a.bind if a.bind else config.get('bind', '0.0.0.0:7719')
    workers = config.get('workers', 1)
    gunicorn = config.get('gunicorn', 'gunicorn')
    user = config.get('user', '')
    user_opt = f'-u {user}' if user else ''
    debug = a.debug if a.debug else config.get('debug')
    loglevel_opt = '--log-level {}'.format('DEBUG' if debug else 'INFO')
    daemon_opt = '-D' if daemon else ''
    extra = config.get('extra-gunicorn-options', '')
    if extra is None: extra = ''
    log_opt = ''
    if not debug and daemon:
        log = config.get('log-file', '')
        if log:
            log_opt = f'--log-file {log}'
    if not os.system(f'{gunicorn} {daemon_opt} -b {bind} '
                     f'-w {workers} {user_opt} {loglevel_opt} {log_opt}'
                     f' {extra} roboger.server:app'):
        raise RuntimeError('Failed to start server')


if a.command == 'launch':
    start_server(daemon=False)
